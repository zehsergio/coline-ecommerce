/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/applePayError.js":
/*!***************************************!*\
  !*** ./resources/js/applePayError.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createAppleErrors: () => (/* binding */ createAppleErrors)
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function createAppleErrors(errors) {
  var errorList = [];
  var _iterator = _createForOfIteratorHelper(errors),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var error = _step.value;
      var _error$contactField = error.contactField,
        contactField = _error$contactField === void 0 ? null : _error$contactField,
        _error$code = error.code,
        code = _error$code === void 0 ? null : _error$code,
        _error$message = error.message,
        message = _error$message === void 0 ? null : _error$message;
      var appleError = contactField ? new ApplePayError(code, contactField, message) : new ApplePayError(code);
      errorList.push(appleError);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return errorList;
}

/***/ }),

/***/ "./resources/js/applePayRequest.js":
/*!*****************************************!*\
  !*** ./resources/js/applePayRequest.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   request: () => (/* binding */ request)
/* harmony export */ });
var request = function request(countryCode, currencyCode, totalLabel, subtotal) {
  return {
    countryCode: countryCode,
    currencyCode: currencyCode,
    supportedNetworks: ['amex', 'maestro', 'masterCard', 'visa', 'vPay'],
    merchantCapabilities: ['supports3DS'],
    shippingType: 'shipping',
    requiredBillingContactFields: ['postalAddress', 'email'],
    requiredShippingContactFields: ['postalAddress', 'email'],
    total: {
      label: totalLabel,
      amount: subtotal,
      type: 'final'
    }
  };
};

/***/ }),

/***/ "./resources/js/blocks/ApplePayButtonComponent.js":
/*!********************************************************!*\
  !*** ./resources/js/blocks/ApplePayButtonComponent.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ApplePayButtonComponent: () => (/* binding */ ApplePayButtonComponent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _applePayRequest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../applePayRequest */ "./resources/js/applePayRequest.js");
/* harmony import */ var _applePayError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../applePayError */ "./resources/js/applePayError.js");


var ApplePayButtonComponent = function ApplePayButtonComponent(_ref) {
  var _ref$buttonAttributes = _ref.buttonAttributes,
    buttonAttributes = _ref$buttonAttributes === void 0 ? {} : _ref$buttonAttributes;
  var mollieApplePayBlockDataCart = window.mollieApplePayBlockDataCart || window.mollieBlockData.mollieApplePayBlockDataCart;
  var nonce = document.getElementById("woocommerce-process-checkout-nonce").value;
  var updatedContactInfo = [];
  var redirectionUrl = '';
  var _mollieApplePayBlockD = mollieApplePayBlockDataCart.product,
    _mollieApplePayBlockD2 = _mollieApplePayBlockD.needShipping,
    needShipping = _mollieApplePayBlockD2 === void 0 ? true : _mollieApplePayBlockD2,
    subtotal = _mollieApplePayBlockD.subtotal,
    _mollieApplePayBlockD3 = mollieApplePayBlockDataCart.shop,
    countryCode = _mollieApplePayBlockD3.countryCode,
    _mollieApplePayBlockD4 = _mollieApplePayBlockD3.currencyCode,
    currencyCode = _mollieApplePayBlockD4 === void 0 ? 'EUR' : _mollieApplePayBlockD4,
    _mollieApplePayBlockD5 = _mollieApplePayBlockD3.totalLabel,
    totalLabel = _mollieApplePayBlockD5 === void 0 ? '' : _mollieApplePayBlockD5,
    ajaxUrl = mollieApplePayBlockDataCart.ajaxUrl;
  var style = {
    height: "".concat(buttonAttributes.height || 48, "px"),
    borderRadius: "".concat(buttonAttributes.borderRadius || 4, "px")
  };
  var findSelectedShippingMethod = function findSelectedShippingMethod(shippingRates) {
    var shippingRate = shippingRates.find(function (shippingMethod) {
      return shippingMethod.selected === true;
    });
    var appleFormattedRate = {
      amount: '',
      detail: '',
      label: shippingRate.name,
      identifier: shippingRate.rate_id,
      selected: shippingRate.selected
    };
    return shippingRate ? appleFormattedRate : '';
  };
  var applePaySession = function applePaySession() {
    var _store$getShippingRat;
    var session = new ApplePaySession(3, (0,_applePayRequest__WEBPACK_IMPORTED_MODULE_0__.request)(countryCode, currencyCode, totalLabel, subtotal));
    var store = wp.data.select('wc/store/cart');
    var shippingRates = (_store$getShippingRat = store.getShippingRates()) === null || _store$getShippingRat === void 0 || (_store$getShippingRat = _store$getShippingRat[0]) === null || _store$getShippingRat === void 0 ? void 0 : _store$getShippingRat.shipping_rates;
    var selectedShippingMethod = '';
    if (shippingRates && shippingRates.length > 0) {
      selectedShippingMethod = findSelectedShippingMethod(shippingRates, selectedShippingMethod);
    }
    session.onshippingmethodselected = function (event) {
      var _this = this;
      jQuery.ajax({
        url: ajaxUrl,
        method: 'POST',
        data: {
          action: 'mollie_apple_pay_update_shipping_method',
          shippingMethod: event.shippingMethod,
          callerPage: 'cart',
          simplifiedContact: updatedContactInfo,
          'woocommerce-process-checkout-nonce': nonce
        },
        success: function success(applePayShippingMethodUpdate, textStatus, jqXHR) {
          var response = applePayShippingMethodUpdate.data;
          selectedShippingMethod = event.shippingMethod;
          if (applePayShippingMethodUpdate.success === false) {
            response.errors = (0,_applePayError__WEBPACK_IMPORTED_MODULE_1__.createAppleErrors)(response.errors);
          }
          _this.completeShippingMethodSelection(response);
        },
        error: function error(jqXHR, textStatus, errorThrown) {
          console.warn(textStatus, errorThrown);
          session.abort();
        }
      });
    };
    session.onshippingcontactselected = function (event) {
      var _this2 = this;
      jQuery.ajax({
        url: ajaxUrl,
        method: 'POST',
        data: {
          action: 'mollie_apple_pay_update_shipping_contact',
          simplifiedContact: event.shippingContact,
          callerPage: 'cart',
          needShipping: needShipping,
          'woocommerce-process-checkout-nonce': nonce,
          shippingMethod: selectedShippingMethod
        },
        success: function success(applePayShippingContactUpdate, textStatus, jqXHR) {
          var response = applePayShippingContactUpdate.data;
          updatedContactInfo = event.shippingContact;
          if (applePayShippingContactUpdate.success === false) {
            response.errors = (0,_applePayError__WEBPACK_IMPORTED_MODULE_1__.createAppleErrors)(response.errors);
          }
          if (response.newShippingMethods) {
            selectedShippingMethod = response.newShippingMethods[0];
          }
          _this2.completeShippingContactSelection(response);
        },
        error: function error(jqXHR, textStatus, errorThrown) {
          console.warn(textStatus, errorThrown);
          session.abort();
        }
      });
    };
    session.onvalidatemerchant = function (applePayValidateMerchantEvent) {
      jQuery.ajax({
        url: ajaxUrl,
        method: 'POST',
        data: {
          action: 'mollie_apple_pay_validation',
          validationUrl: applePayValidateMerchantEvent.validationURL,
          'woocommerce-process-checkout-nonce': nonce
        },
        success: function success(merchantSession, textStatus, jqXHR) {
          if (merchantSession.success === true) {
            session.completeMerchantValidation(JSON.parse(merchantSession.data));
          } else {
            console.warn(merchantSession.data);
            session.abort();
          }
        },
        error: function error(jqXHR, textStatus, errorThrown) {
          console.warn(textStatus, errorThrown);
          session.abort();
        }
      });
    };
    session.onpaymentauthorized = function (ApplePayPayment) {
      var _ApplePayPayment$paym = ApplePayPayment.payment,
        billingContact = _ApplePayPayment$paym.billingContact,
        shippingContact = _ApplePayPayment$paym.shippingContact;
      jQuery.ajax({
        url: ajaxUrl,
        method: 'POST',
        data: {
          action: 'mollie_apple_pay_create_order_cart',
          shippingContact: ApplePayPayment.payment.shippingContact,
          billingContact: ApplePayPayment.payment.billingContact,
          token: ApplePayPayment.payment.token,
          shippingMethod: selectedShippingMethod,
          'mollie-payments-for-woocommerce_issuer_applepay': 'applepay',
          'woocommerce-process-checkout-nonce': nonce,
          'billing_first_name': billingContact.givenName || '',
          'billing_last_name': billingContact.familyName || '',
          'billing_company': '',
          'billing_country': billingContact.countryCode || '',
          'billing_address_1': billingContact.addressLines[0] || '',
          'billing_address_2': billingContact.addressLines[1] || '',
          'billing_postcode': billingContact.postalCode || '',
          'billing_city': billingContact.locality || '',
          'billing_state': billingContact.administrativeArea || '',
          'billing_phone': billingContact.phoneNumber || '000000000000',
          'billing_email': shippingContact.emailAddress || '',
          'shipping_first_name': shippingContact.givenName || '',
          'shipping_last_name': shippingContact.familyName || '',
          'shipping_company': '',
          'shipping_country': shippingContact.countryCode || '',
          'shipping_address_1': shippingContact.addressLines[0] || '',
          'shipping_address_2': shippingContact.addressLines[1] || '',
          'shipping_postcode': shippingContact.postalCode || '',
          'shipping_city': shippingContact.locality || '',
          'shipping_state': shippingContact.administrativeArea || '',
          'shipping_phone': shippingContact.phoneNumber || '000000000000',
          'shipping_email': shippingContact.emailAddress || '',
          'order_comments': '',
          'payment_method': 'mollie_wc_gateway_applepay',
          '_wp_http_referer': '/?wc-ajax=update_order_review'
        },
        success: function success(authorizationResult, textStatus, jqXHR) {
          var result = authorizationResult.data;
          if (authorizationResult.success === true) {
            redirectionUrl = result['returnUrl'];
            session.completePayment(result['responseToApple']);
            window.location.href = redirectionUrl;
          } else {
            result.errors = (0,_applePayError__WEBPACK_IMPORTED_MODULE_1__.createAppleErrors)(result.errors);
            session.completePayment(result);
          }
        },
        error: function error(jqXHR, textStatus, errorThrown) {
          console.warn(textStatus, errorThrown);
          session.abort();
        }
      });
    };
    session.begin();
  };
  return /*#__PURE__*/React.createElement("button", {
    id: "mollie_applepay_button",
    className: "apple-pay-button apple-pay-button-black",
    onClick: function onClick(event) {
      event.preventDefault();
      applePaySession();
    },
    style: style
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ApplePayButtonComponent);

/***/ }),

/***/ "./resources/js/blocks/ApplePayButtonEditorComponent.js":
/*!**************************************************************!*\
  !*** ./resources/js/blocks/ApplePayButtonEditorComponent.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ApplePayButtonEditorComponent: () => (/* binding */ ApplePayButtonEditorComponent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var ApplePayButtonEditorComponent = function ApplePayButtonEditorComponent(_ref) {
  var _ref$buttonAttributes = _ref.buttonAttributes,
    buttonAttributes = _ref$buttonAttributes === void 0 ? {} : _ref$buttonAttributes;
  var style = {
    height: "".concat(buttonAttributes.height || 48, "px"),
    borderRadius: "".concat(buttonAttributes.borderRadius || 4, "px")
  };
  return /*#__PURE__*/React.createElement("button", {
    id: "mollie_applepay_button",
    className: "apple-pay-button apple-pay-button-black",
    style: style
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ApplePayButtonEditorComponent);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.
(() => {
/*!*********************************************!*\
  !*** ./resources/js/applepayButtonBlock.js ***!
  \*********************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _blocks_ApplePayButtonComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blocks/ApplePayButtonComponent */ "./resources/js/blocks/ApplePayButtonComponent.js");
/* harmony import */ var _blocks_ApplePayButtonEditorComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blocks/ApplePayButtonEditorComponent */ "./resources/js/blocks/ApplePayButtonEditorComponent.js");


(function (_ref) {
  var mollieApplePayBlockDataCart = _ref.mollieApplePayBlockDataCart;
  if (mollieApplePayBlockDataCart.length === 0) {
    return;
  }
  var _window = window,
    ApplePaySession = _window.ApplePaySession;
  if (!(ApplePaySession && ApplePaySession.canMakePayments())) {
    return null;
  }
  var registerExpressPaymentMethod = wc.wcBlocksRegistry.registerExpressPaymentMethod;
  registerExpressPaymentMethod({
    name: 'mollie_wc_gateway_applepay_express',
    content: /*#__PURE__*/React.createElement(_blocks_ApplePayButtonComponent__WEBPACK_IMPORTED_MODULE_0__.ApplePayButtonComponent, null),
    edit: /*#__PURE__*/React.createElement(_blocks_ApplePayButtonEditorComponent__WEBPACK_IMPORTED_MODULE_1__.ApplePayButtonEditorComponent, null),
    ariaLabel: 'Apple Pay',
    canMakePayment: function canMakePayment() {
      return true;
    },
    paymentMethodId: 'mollie_wc_gateway_applepay',
    supports: {
      features: ['products']
    }
  });
})(window);
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,