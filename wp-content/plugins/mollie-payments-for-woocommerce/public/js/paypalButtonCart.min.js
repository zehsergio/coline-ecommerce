/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/paypalButtonUtils.js":
/*!*******************************************!*\
  !*** ./resources/js/paypalButtonUtils.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ajaxCallToOrder: () => (/* binding */ ajaxCallToOrder)
/* harmony export */ });
var ajaxCallToOrder = function ajaxCallToOrder(ajaxUrl) {
  var button = document.getElementById('mollie-PayPal-button');
  if (!button) {
    return;
  }
  var preventSpam = false;
  var nonce = button.children[0].value;
  button.addEventListener('click', function (evt) {
    evt.preventDefault();
    if (!button) {
      return;
    }
    button.disabled = true;
    button.classList.add("buttonDisabled");
    jQuery.ajax({
      url: ajaxUrl,
      method: 'POST',
      data: {
        action: 'mollie_paypal_create_order_cart',
        'mollie-payments-for-woocommerce_issuer_paypal_button': 'paypal',
        nonce: nonce
      },
      success: function success(response) {
        var result = response.data;
        if (response.success === true) {
          window.location.href = result['redirect'];
        } else {
          console.log(response.data);
        }
      },
      error: function error(jqXHR, textStatus, errorThrown) {
        button.disabled = false;
        button.classList.remove("buttonDisabled");
        console.warn(textStatus, errorThrown);
      }
    });
    preventSpam = true;
    if (preventSpam) {
      setTimeout(function () {
        button.disabled = false;
        button.classList.remove("buttonDisabled");
        preventSpam = false;
      }, 3000);
    }
  });
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.
(() => {
/*!******************************************!*\
  !*** ./resources/js/paypalButtonCart.js ***!
  \******************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _paypalButtonUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./paypalButtonUtils */ "./resources/js/paypalButtonUtils.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

(function (_ref) {
  var _ = _ref._,
    molliepaypalButtonCart = _ref.molliepaypalButtonCart,
    jQuery = _ref.jQuery;
  if (_.isEmpty(molliepaypalButtonCart)) {
    return;
  }
  var minFee = molliepaypalButtonCart.product.minFee,
    ajaxUrl = molliepaypalButtonCart.ajaxUrl;
  if (!ajaxUrl) {
    return;
  }
  var maybeShowButton = function maybeShowButton(underRange) {
    if (underRange) {
      hideButton();
    }
  };
  var hideButton = function hideButton() {
    var payPalButton = document.getElementById('mollie-PayPal-button');
    if (payPalButton.parentNode !== null) {
      payPalButton.parentNode.removeChild(payPalButton);
    }
  };
  var extractValue = function extractValue(path) {
    return parseFloat(path.textContent).toFixed(2);
  };
  var calculateTaxes = function calculateTaxes() {
    var taxesPath = document.getElementsByClassName('tax-rate');
    if (taxesPath.length === 0) {
      return 0;
    }
    var total = 0.00;
    var _iterator = _createForOfIteratorHelper(taxesPath),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var tax = _step.value;
        var taxPath = tax.getElementsByClassName('woocommerce-Price-amount')[0];
        var workingNode = taxPath.cloneNode(true);
        var currency = workingNode.lastChild;
        workingNode.removeChild(currency);
        total += parseFloat(extractValue(workingNode));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return total;
  };
  var calculateTotal = function calculateTotal() {
    var subtotalPath = document.getElementsByClassName('cart-subtotal')[0].getElementsByClassName('woocommerce-Price-amount')[0].childNodes[0];
    var workingNode = subtotalPath.cloneNode(true);
    var currency = workingNode.getElementsByClassName('woocommerce-Price-currencySymbol')[0];
    workingNode.removeChild(currency);
    var total = parseFloat(extractValue(workingNode));
    total += calculateTaxes();
    return total;
  };
  var underRange = function underRange() {
    var updatedPrice = calculateTotal();
    return minFee > updatedPrice;
  };
  jQuery(document.body).on('updated_cart_totals', function (event) {
    var payPalButton = document.getElementById('mollie-PayPal-button');
    if (payPalButton == null || payPalButton.parentNode == null) {
      return;
    }
    maybeShowButton(underRange());
    (0,_paypalButtonUtils__WEBPACK_IMPORTED_MODULE_0__.ajaxCallToOrder)(ajaxUrl);
  });
  setTimeout(function () {
    var payPalButton = document.getElementById('mollie-PayPal-button');
    if (payPalButton == null || payPalButton.parentNode == null) {
      return;
    }
    maybeShowButton(underRange());
    (0,_paypalButtonUtils__WEBPACK_IMPORTED_MODULE_0__.ajaxCallToOrder)(ajaxUrl);
  }, 500);
})(window);
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,